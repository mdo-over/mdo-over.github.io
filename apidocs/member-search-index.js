memberSearchIndex = [{"p":"recombination.crossoverpoint.postprocessing","c":"DefaultAttributeProcessor","l":"acceptsAttribute(EAttribute)","url":"acceptsAttribute(org.eclipse.emf.ecore.EAttribute)"},{"p":"recombination.crossoverpoint.postprocessing","c":"IAttributeProcessor","l":"acceptsAttribute(EAttribute)","url":"acceptsAttribute(org.eclipse.emf.ecore.EAttribute)"},{"p":"model.modelgraph","c":"ModelGraph","l":"addEdge(ModelEdge)","url":"addEdge(model.modelgraph.ModelEdge)"},{"p":"graphtools","c":"SubGraphConstructor","l":"addEdgeCopy(ModelEdge)","url":"addEdgeCopy(model.modelgraph.ModelEdge)"},{"p":"model","c":"ModelGraphMapping","l":"addMapping(ModelGraphElement, ModelGraphElement)","url":"addMapping(model.modelgraph.ModelGraphElement,model.modelgraph.ModelGraphElement)"},{"p":"graphtools.emf","c":"HenshinRuleAdapter","l":"addModelEdgeToRule(ModelEdge, CRule, Action)","url":"addModelEdgeToRule(model.modelgraph.ModelEdge,org.eclipse.emf.henshin.model.compact.CRule,org.eclipse.emf.henshin.model.Action)"},{"p":"graphtools.emf","c":"HenshinRuleAdapter","l":"addModelNodeToRuleIfAbsent(ModelNode, CRule, Action)","url":"addModelNodeToRuleIfAbsent(model.modelgraph.ModelNode,org.eclipse.emf.henshin.model.compact.CRule,org.eclipse.emf.henshin.model.Action)"},{"p":"model.modelgraph","c":"ModelGraph","l":"addNode(ModelNode)","url":"addNode(model.modelgraph.ModelNode)"},{"p":"graphtools","c":"SubGraphConstructor","l":"addNodeCopy(ModelNode)","url":"addNodeCopy(model.modelgraph.ModelNode)"},{"p":"graphtools.emf","c":"HenshinRuleAdapter","l":"applyRule(EObject, Match)","url":"applyRule(org.eclipse.emf.ecore.EObject,org.eclipse.emf.henshin.interpreter.Match)"},{"p":"model","c":"Span","l":"calculatePushout()"},{"p":"split.emf","c":"ContainmentSubtreeSplit","l":"ContainmentSubtreeSplit(double, Set<EReference>)","url":"%3Cinit%3E(double,java.util.Set)"},{"p":"split.emf","c":"ContainmentSubtreeSplit","l":"ContainmentSubtreeSplit(Random, double, Set<EReference>)","url":"%3Cinit%3E(java.util.Random,double,java.util.Set)"},{"p":"graphtools.emf","c":"PartialModelCopier","l":"copyContainment(EReference, EObject, EObject)","url":"copyContainment(org.eclipse.emf.ecore.EReference,org.eclipse.emf.ecore.EObject,org.eclipse.emf.ecore.EObject)"},{"p":"model","c":"CoSpan","l":"CoSpan(ModelGraphMapping, ModelGraphMapping)","url":"%3Cinit%3E(model.ModelGraphMapping,model.ModelGraphMapping)"},{"p":"graphtools.emf","c":"ModelGraphToEmfModelConverter","l":"createEmfModel(ModelGraph)","url":"createEmfModel(model.modelgraph.ModelGraph)"},{"p":"model.modelgraph","c":"ModelGraphFactory","l":"createModelGraph(EObject)","url":"createModelGraph(org.eclipse.emf.ecore.EObject)"},{"p":"recombination.crossoverpoint","c":"CrossoverPointRecombination","l":"CrossoverPointRecombination(IInferenceStrategy, IAttributeProcessor, Engine)","url":"%3Cinit%3E(recombination.crossoverpoint.inference.IInferenceStrategy,recombination.crossoverpoint.postprocessing.IAttributeProcessor,org.eclipse.emf.henshin.interpreter.Engine)"},{"p":"recombination.crossoverpoint.postprocessing","c":"DefaultAttributeProcessor","l":"DefaultAttributeProcessor()","url":"%3Cinit%3E()"},{"p":"graphtools","c":"DotSerializer","l":"DotSerializer(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"crossover","c":"ICrossoverStrategy","l":"evolve(EObject, EObject)","url":"evolve(org.eclipse.emf.ecore.EObject,org.eclipse.emf.ecore.EObject)"},{"p":"crossover","c":"ProblemPartCrossover","l":"evolve(EObject, EObject)","url":"evolve(org.eclipse.emf.ecore.EObject,org.eclipse.emf.ecore.EObject)"},{"p":"graphtools.emf","c":"HenshinRuleAdapter","l":"findMatch(EObject)","url":"findMatch(org.eclipse.emf.ecore.EObject)"},{"p":"model.modelgraph","c":"ModelGraph","l":"getAllEdgeReferences()"},{"p":"model.modelgraph","c":"ModelGraph","l":"getAllNodeReferences()"},{"p":"model","c":"CoSpan","l":"getCodomain()"},{"p":"graphtools","c":"SubGraphConstructor","l":"getCompleteGraph()"},{"p":"model","c":"Span","l":"getDomain()"},{"p":"model","c":"Span","l":"getDomainToFirstCodomain()"},{"p":"model","c":"Span","l":"getDomainToSecondCodomain()"},{"p":"model.modelgraph","c":"ModelGraph","l":"getEdges()"},{"p":"model.modelgraph","c":"ModelGraph","l":"getEdges(EObject)","url":"getEdges(org.eclipse.emf.ecore.EObject)"},{"p":"model.modelgraph","c":"ModelGraph","l":"getElements()"},{"p":"model.modelgraph","c":"ModelGraph","l":"getElements(EObject)","url":"getElements(org.eclipse.emf.ecore.EObject)"},{"p":"model","c":"Span","l":"getFirstCodomain()"},{"p":"model","c":"Span","l":"getFirstCodomainToPushout()"},{"p":"model","c":"CoSpan","l":"getFirstDomain()"},{"p":"model","c":"CoSpan","l":"getFirstDomainToCodomain()"},{"p":"graphtools.emf","c":"GraphRuleAdapter","l":"getGraphToRuleMap()"},{"p":"model","c":"ModelGraphMapping","l":"getImage(ModelGraphElement)","url":"getImage(model.modelgraph.ModelGraphElement)"},{"p":"model","c":"ModelGraphMapping","l":"getImageGraph()"},{"p":"graphtools.emf","c":"MappingRuleAdapter","l":"getImageToRuleMap()"},{"p":"model.modelgraph","c":"ModelNode","l":"getIncomingEdges()"},{"p":"model.modelgraph","c":"ModelGraphFactory","l":"getInstance()"},{"p":"graphtools.emf","c":"HenshinRuleAdapter","l":"getLastMatch()"},{"p":"graphtools","c":"SubGraphConstructor","l":"getMapping()"},{"p":"model.modelgraph","c":"ModelGraphElement","l":"getName()"},{"p":"model.modelgraph","c":"ModelGraph","l":"getNodes()"},{"p":"model.modelgraph","c":"ModelGraph","l":"getNodes(EObject)","url":"getNodes(org.eclipse.emf.ecore.EObject)"},{"p":"graphtools.emf","c":"ModelGraphToEmfModelConverter","l":"getOrigin(EObject)","url":"getOrigin(org.eclipse.emf.ecore.EObject)"},{"p":"model","c":"ModelGraphMapping","l":"getOrigin(ModelGraphElement)","url":"getOrigin(model.modelgraph.ModelGraphElement)"},{"p":"model","c":"ModelGraphMapping","l":"getOriginGraph()"},{"p":"graphtools.emf","c":"MappingRuleAdapter","l":"getOriginToRuleMap()"},{"p":"model.modelgraph","c":"ModelNode","l":"getOutgoingEdges()"},{"p":"model","c":"CoSpan","l":"getPullback()"},{"p":"model","c":"CoSpan","l":"getPullbackToFirstDomain()"},{"p":"model","c":"CoSpan","l":"getPullbackToSecondDomain()"},{"p":"model","c":"Span","l":"getPushout()"},{"p":"model.modelgraph","c":"ModelGraphElement","l":"getReferencedObject()"},{"p":"graphtools.emf","c":"HenshinRuleAdapter","l":"getResultMatch()"},{"p":"model.modelgraph","c":"ModelGraph","l":"getRoot()"},{"p":"graphtools.emf","c":"HenshinRuleAdapter","l":"getRule()"},{"p":"model","c":"Span","l":"getSecondCodomain()"},{"p":"model","c":"Span","l":"getSecondCodomainToPushout()"},{"p":"model","c":"CoSpan","l":"getSecondDomain()"},{"p":"model","c":"CoSpan","l":"getSecondDomainToCodomain()"},{"p":"model.modelgraph","c":"ModelEdge","l":"getSource()"},{"p":"graphtools","c":"SubGraphConstructor","l":"getSubGraph()"},{"p":"model.modelgraph","c":"ModelEdge","l":"getTarget()"},{"p":"model.modelgraph","c":"GraphConversionException","l":"GraphConversionException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"crossover","c":"ProblemPartCrossover","l":"graphFac"},{"p":"model.modelgraph","c":"GraphManipulationException","l":"GraphManipulationException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"graphtools.emf","c":"GraphRuleAdapter","l":"GraphRuleAdapter(Engine, ModelGraph)","url":"%3Cinit%3E(org.eclipse.emf.henshin.interpreter.Engine,model.modelgraph.ModelGraph)"},{"p":"graphtools.emf","c":"HenshinRuleAdapter","l":"HenshinRuleAdapter(Engine)","url":"%3Cinit%3E(org.eclipse.emf.henshin.interpreter.Engine)"},{"p":"recombination.crossoverpoint.inference","c":"IInferenceStrategy","l":"inferCrossoverPoint(CoSpan, CoSpan)","url":"inferCrossoverPoint(model.CoSpan,model.CoSpan)"},{"p":"recombination.crossoverpoint.inference","c":"ProblemPartInference","l":"inferCrossoverPoint(CoSpan, CoSpan)","url":"inferCrossoverPoint(model.CoSpan,model.CoSpan)"},{"p":"model.modelgraph","c":"MalformedGraphException","l":"MalformedGraphException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"graphtools.emf","c":"MappingRuleAdapter","l":"MappingRuleAdapter(Engine, ModelGraphMapping)","url":"%3Cinit%3E(org.eclipse.emf.henshin.interpreter.Engine,model.ModelGraphMapping)"},{"p":"graphtools.emf","c":"HenshinRuleAdapter","l":"match"},{"p":"model.modelgraph","c":"ModelEdge","l":"ModelEdge(ModelEdge)","url":"%3Cinit%3E(model.modelgraph.ModelEdge)"},{"p":"model.modelgraph","c":"ModelEdge","l":"ModelEdge(ModelNode, ModelNode)","url":"%3Cinit%3E(model.modelgraph.ModelNode,model.modelgraph.ModelNode)"},{"p":"model.modelgraph","c":"ModelGraph","l":"ModelGraph()","url":"%3Cinit%3E()"},{"p":"model.modelgraph","c":"ModelGraph","l":"ModelGraph(Integer, Integer, Integer, Integer)","url":"%3Cinit%3E(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)"},{"p":"model.modelgraph","c":"ModelGraphElement","l":"ModelGraphElement()","url":"%3Cinit%3E()"},{"p":"model.modelgraph","c":"ModelGraphElement","l":"ModelGraphElement(ModelGraphElement)","url":"%3Cinit%3E(model.modelgraph.ModelGraphElement)"},{"p":"model","c":"ModelGraphMapping","l":"ModelGraphMapping(ModelGraph, ModelGraph)","url":"%3Cinit%3E(model.modelgraph.ModelGraph,model.modelgraph.ModelGraph)"},{"p":"graphtools.emf","c":"ModelGraphToEmfModelConverter","l":"ModelGraphToEmfModelConverter()","url":"%3Cinit%3E()"},{"p":"model.modelgraph","c":"ModelNode","l":"ModelNode()","url":"%3Cinit%3E()"},{"p":"model.modelgraph","c":"ModelNode","l":"ModelNode(ModelNode)","url":"%3Cinit%3E(model.modelgraph.ModelNode)"},{"p":"graphtools.emf","c":"PartialModelCopier","l":"PartialModelCopier()","url":"%3Cinit%3E()"},{"p":"crossover","c":"ProblemPartCrossover","l":"ProblemPartCrossover(Set<EObject>, Engine)","url":"%3Cinit%3E(java.util.Set,org.eclipse.emf.henshin.interpreter.Engine)"},{"p":"recombination.crossoverpoint.inference","c":"ProblemPartInference","l":"ProblemPartInference(Set<EReference>, Engine)","url":"%3Cinit%3E(java.util.Set,org.eclipse.emf.henshin.interpreter.Engine)"},{"p":"recombination.crossoverpoint.postprocessing","c":"DefaultAttributeProcessor","l":"processAttribute(EObject, EObject, EAttribute)","url":"processAttribute(org.eclipse.emf.ecore.EObject,org.eclipse.emf.ecore.EObject,org.eclipse.emf.ecore.EAttribute)"},{"p":"recombination.crossoverpoint.postprocessing","c":"IAttributeProcessor","l":"processAttribute(EObject, EObject, EAttribute)","url":"processAttribute(org.eclipse.emf.ecore.EObject,org.eclipse.emf.ecore.EObject,org.eclipse.emf.ecore.EAttribute)"},{"p":"split.generic","c":"RandomElementwiseSplit","l":"RandomElementwiseSplit(double, Set<EObject>)","url":"%3Cinit%3E(double,java.util.Set)"},{"p":"split.generic","c":"RandomElementwiseSplit","l":"RandomElementwiseSplit(Random, double, Set<EObject>)","url":"%3Cinit%3E(java.util.Random,double,java.util.Set)"},{"p":"recombination","c":"RecombinationException","l":"RecombinationException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"recombination","c":"IRecombinationStrategy","l":"recombine(CoSpan, CoSpan)","url":"recombine(model.CoSpan,model.CoSpan)"},{"p":"recombination.crossoverpoint","c":"CrossoverPointRecombination","l":"recombine(CoSpan, CoSpan)","url":"recombine(model.CoSpan,model.CoSpan)"},{"p":"model.modelgraph","c":"ModelGraph","l":"removeEdge(ModelEdge)","url":"removeEdge(model.modelgraph.ModelEdge)"},{"p":"model","c":"ModelGraphMapping","l":"removeMapping(ModelGraphElement, ModelGraphElement)","url":"removeMapping(model.modelgraph.ModelGraphElement,model.modelgraph.ModelGraphElement)"},{"p":"model.modelgraph","c":"ModelGraph","l":"removeNode(ModelNode)","url":"removeNode(model.modelgraph.ModelNode)"},{"p":"graphtools.emf","c":"HenshinRuleAdapter","l":"resultMatch"},{"p":"graphtools.emf","c":"HenshinRuleAdapter","l":"rule"},{"p":"graphtools","c":"DotSerializer","l":"saveAsDot(ModelGraph, String, boolean)","url":"saveAsDot(model.modelgraph.ModelGraph,java.lang.String,boolean)"},{"p":"graphtools","c":"DotSerializer","l":"saveAsDot(ModelGraph, String)","url":"saveAsDot(model.modelgraph.ModelGraph,java.lang.String)"},{"p":"model.modelgraph","c":"ModelGraphElement","l":"setName(String)","url":"setName(java.lang.String)"},{"p":"model.modelgraph","c":"ModelGraphElement","l":"setReferencedObject(EObject)","url":"setReferencedObject(org.eclipse.emf.ecore.EObject)"},{"p":"model.modelgraph","c":"ModelGraph","l":"setRoot(ModelNode)","url":"setRoot(model.modelgraph.ModelNode)"},{"p":"model.modelgraph","c":"ModelEdge","l":"setSource(ModelNode)","url":"setSource(model.modelgraph.ModelNode)"},{"p":"model.modelgraph","c":"ModelEdge","l":"setTarget(ModelNode)","url":"setTarget(model.modelgraph.ModelNode)"},{"p":"model","c":"Span","l":"Span(ModelGraphMapping, ModelGraphMapping)","url":"%3Cinit%3E(model.ModelGraphMapping,model.ModelGraphMapping)"},{"p":"split","c":"ISplitStrategy","l":"split(ModelGraph)","url":"split(model.modelgraph.ModelGraph)"},{"p":"split.emf","c":"ContainmentSubtreeSplit","l":"split(ModelGraph)","url":"split(model.modelgraph.ModelGraph)"},{"p":"split.generic","c":"RandomElementwiseSplit","l":"split(ModelGraph)","url":"split(model.modelgraph.ModelGraph)"},{"p":"split","c":"SplitException","l":"SplitException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"graphtools","c":"SubGraphConstructor","l":"SubGraphConstructor(ModelGraph)","url":"%3Cinit%3E(model.modelgraph.ModelGraph)"}]